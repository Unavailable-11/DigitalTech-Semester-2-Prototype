using System.Collections;
using System.Collections.Generic;
using UnityEngine;
public class PlayerMovement : MonoBehaviour
{
    public float moveSpeed = 10f;
    public float jumpForce = 10f;
    public float fallMultiplier = 2.5f;
    // Increases fall speed public
    float lowJumpMultiplier = 2f;
    // Makes the player jump higher if jump button is released early
    private bool isGrounded = true;
    // Checks if the player is on the ground
    private Rigidbody2D rb2D;
   
    void Awake()
    {
        rb2D = gameObject.AddComponent<Rigidbody2D>();
        rb2D.gravityScale = 1; // Normal gravity initially
        rb2D.freezeRotation = true;
        // Prevents the player from rotating due to physics interactions
    }

    void HandlePlayerMovement()
    {
        float movementX = Input.GetAxisRaw("Horizontal");
        Vector2 movement = new Vector2(movementX * moveSpeed, rb2D.velocity.y);
        rb2D.velocity = movement;
        if
            ((Input.GetButtonDown("Jump") || Input.GetKeyDown(KeyCode.W) || Input.GetKeyDown(KeyCode.UpArrow)) && isGrounded)
        {
            rb2D.AddForce(Vector2.up * jumpForce, ForceMode2D.Impulse);
            isGrounded = false;
            // Player is no longer on the ground after jumping
        }
       
        if (rb2D.velocity.y < 0)
        {
            rb2D.gravityScale = fallMultiplier;
            // Increase gravity when falling
        }
       
        else if (rb2D.velocity.y > 0 && !Input.GetButton("Jump") && !Input.GetKey(KeyCode.W) && !Input.GetKey(KeyCode.UpArrow))
        {
            rb2D.gravityScale = lowJumpMultiplier;
            // Slightly increase gravity for a more controlled jump
        }
       
        else
        {
            rb2D.gravityScale = 1f;
            // Reset gravity scale when not falling
        }
    }

            void Update()
    {
        HandlePlayerMovement();
   
    }
   
    void OnCollisionEnter2D(Collision2D collision)
    {
        // If the player collides with the ground, they can jump again
     if (collision.gameObject.CompareTag("Ground"))
        {
            isGrounded = true;
        }
    }
}
